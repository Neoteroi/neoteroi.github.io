{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Plugins for MkDocs","text":"<p>Plugins for MkDocs and Material for MkDocs by Roberto Prevato.</p> <pre><code>pip install neoteroi-mkdocs\n</code></pre> <p>Cards</p><p>Extension to provide cards-like HTML controls, to display information with text and pictures. </p> <p>Timeline</p><p>Extension to display chronological information with style. </p> <p>Gantt</p><p>Markdown extension to generate beautiful gantt diagrams. </p> <p>OAD</p><p>MkDocs plugin to generate human readable documentation from OpenAPI Documentation specification files (also known as swagger files). </p> <p>Spantable</p><p>Markdown extension to generate HTML tables supporting <code>colspan</code> and <code>rowspan</code>. </p> <p>Contribs</p><p>MkDocs plugin to generate contributions information for each page, obtained automatically from the project's <code>git</code> repository. </p> <p>Last modified on: 2022-10-01 10:15:39</p>"},{"location":"about/","title":"About Neoteroi","text":"<p>Neoteroi is a collection of projects for Python.</p>"},{"location":"about/#the-projects-home","title":"The project's home","text":"<p>The project source code is in GitHub.</p> <p>The documentation source code is in GitHub.</p> <p>Last modified on: 2022-08-12 20:49:11</p>"},{"location":"cards/","title":"Cards","text":"<p>The cards extension provides eye-catching card-like controls, to display information that usually includes images.</p> <p>ChatBot</p><p>Lorem ipsum dolor sit amet.</p> <p>Zeus</p> <p>Lorem ipsum dolor sit amet.</p> <p>Athena</p> <p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p> <p>Lorem ipsum dolor sit amet.</p> <p>Artemis</p> <p>Lorem ipsum dolor sit amet.</p> <p>Ares</p> <p>Lorem ipsum dolor sit amet.</p> <p>Nike</p> <p>Lorem ipsum dolor sit amet.</p> Greek Mythology icons made by max.icons from www.flaticon.com"},{"location":"cards/#how-to-use","title":"How to use","text":"<p>Edit your <code>mkdocs.yml</code> file to include the extra CSS file from Neoteroi mkdocs-plugins and the <code>neoteroi.cards</code> extension:</p> <pre><code>extra_css:\n  - css/neoteroi-mkdocs.css\n  ...\n\nmarkdown_extensions:\n  - neoteroi.cards\n  ...\n</code></pre>"},{"location":"cards/#input-object","title":"Input object","text":""},{"location":"cards/#examples","title":"Examples","text":"JSONYAMLFile sourceURL source <pre><code>::cards::\n\n[\n  {\n    \"title\": \"Zeus\",\n    \"content\": \"Lorem ipsum dolor sit amet.\",\n    \"image\": \"./img/icons/001-zeus.png\"\n  },\n  {\n    \"title\": \"Athena\",\n    \"content\": \"Lorem ipsum dolor sit amet.\",\n    \"image\": \"./img/icons/003-athena.png\"\n  },\n  {\n    \"title\": \"Poseidon\",\n    \"content\": \"Lorem ipsum dolor sit amet.\",\n    \"image\": \"./img/icons/007-poseidon.png\"\n  },\n  {\n    \"title\": \"Artemis\",\n    \"content\": \"Lorem ipsum dolor sit amet.\",\n    \"image\": \"./img/icons/021-artemis.png\"\n  },\n  {\n    \"title\": \"Ares\",\n    \"content\": \"Lorem ipsum dolor sit amet.\",\n    \"image\": \"./img/icons/006-ares.png\"\n  },\n  {\n    \"title\": \"Nike\",\n    \"content\": \"Lorem ipsum dolor sit amet.\",\n    \"image\": \"./img/icons/027-nike.png\"\n  }\n]\n\n::/cards::\n</code></pre> <pre><code>::cards::\n\n- title: Zeus\n  content: Lorem ipsum dolor sit amet.\n  image: ./img/icons/001-zeus.png\n\n- title: Athena\n  content: Lorem ipsum dolor sit amet.\n  image: ./img/icons/003-athena.png\n\n- title: Poseidon\n  content: Lorem ipsum dolor sit amet.\n  image: ./img/icons/007-poseidon.png\n\n- title: Artemis\n  content: Lorem ipsum dolor sit amet.\n  image: ./img/icons/021-artemis.png\n\n- title: Ares\n  content: Lorem ipsum dolor sit amet.\n  image: ./img/icons/006-ares.png\n\n- title: Nike\n  content: Lorem ipsum dolor sit amet.\n  image: ./img/icons/027-nike.png\n\n::/cards::\n</code></pre> <pre><code>[cards(./settings.yaml)]\n\n[cards(./settings.json)]\n\n# with view options:\n\n[cards image-bg(./settings.yaml)]\n</code></pre> <pre><code>[cards(https://www.neoteroi.dev/examples/cards.yaml)]\n\n[cards(https://www.neoteroi.dev/examples/cards.json)]\n\n# with view options:\n\n[cards image-bg(https://www.neoteroi.dev/examples/cards.yaml)]\n</code></pre>"},{"location":"cards/#schema","title":"Schema","text":"<pre><code>classDiagram\ndirection LR\n\nclass CardItem {\n    title: str\n    url: str | None = None\n    content: str | None = None\n    icon: str | None = None\n    key: str | None = None\n    image: str | Image | None = None\n}\n\nclass Cards {\n    items: Array of CardItem\n}\n\nCards --&gt; CardItem\n</code></pre> <pre><code>@dataclass\nclass Image:\n    url: str\n    height: int | None = None\n    width: int | None = None\n    alt: str | None = None\n\n\n@dataclass\nclass CardItem:\n    title: str\n    url: str | None = None\n    content: str | None = None\n    icon: str | None = None\n    key: str | None = None\n    image: str | Image | None = None\n\n\n@dataclass\nclass Cards:\n    items: List[CardItem]\n</code></pre>"},{"location":"cards/#options","title":"Options","text":""},{"location":"cards/#cards-with-links","title":"Cards with links","text":"<p>Specify a <code>url</code> property in the items to have links in cards.</p> <pre><code>- title: Zeus\n  content: |\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n    incididunt ut labore et dolore magna aliqua.\n  image: ./img/icons/001-zeus.png\n  url: https://en.wikipedia.org/wiki/Zeus\n</code></pre> <p>Zeus</p><p>Lorem ipsum dolor sit amet.</p> <p>Athena</p><p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p><p>Lorem ipsum dolor sit amet.</p> <p>Artemis</p><p>Lorem ipsum dolor sit amet.</p> <p>Ares</p><p>Lorem ipsum dolor sit amet.</p> <p>Nike</p><p>Lorem ipsum dolor sit amet.</p>"},{"location":"cards/#controlling-the-number-of-columns","title":"Controlling the number of columns","text":"<p>To control the number of columns in the grid, use the <code>cols</code> view option.</p> <pre><code>cols=4\n</code></pre> <p>Zeus</p> <p>Lorem ipsum dolor sit amet. </p> <p>Athena</p> <p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p> <p>Lorem ipsum dolor sit amet.</p> <p>Artemis</p> <p>Lorem ipsum dolor sit amet.</p> <p>Ares</p> <p>Lorem ipsum dolor sit amet.</p> <p>Nike</p> <p>Lorem ipsum dolor sit amet.</p> <pre><code>cols=2\n</code></pre> <p>Zeus</p> <p>Lorem ipsum dolor sit amet. </p> <p>Athena</p> <p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p> <p>Lorem ipsum dolor sit amet.</p> <p>Artemis</p> <p>Lorem ipsum dolor sit amet.</p> <p>Ares</p> <p>Lorem ipsum dolor sit amet.</p> <p>Nike</p> <p>Lorem ipsum dolor sit amet.</p> <pre><code>cols=1\n</code></pre> <p>Zeus</p> <p>Lorem ipsum dolor sit amet. </p> <p>Athena</p> <p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p> <p>Lorem ipsum dolor sit amet.</p> <p>Artemis</p> <p>Lorem ipsum dolor sit amet.</p> <p>Ares</p> <p>Lorem ipsum dolor sit amet.</p> <p>Nike</p> <p>Lorem ipsum dolor sit amet.</p> <p>Columns and CSS rules</p> <p>Only values between 1 and 6 are supported out of the box. To handle greater values, also specify a custom CSS rule in your MkDocs settings like the following:</p> <pre><code>.nt-cards.nt-grid.cols-10 {\n    grid-template-columns: repeat(10, 1fr);\n}\n</code></pre>"},{"location":"cards/#using-background-images","title":"Using background images","text":"<p>To display images using background images instead of image elements, use the <code>image-bg</code> view option.</p> <pre><code>::cards:: image-bg\n</code></pre> <p>Zeus</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </p> <p>Athena</p> <p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p> <p>Lorem ipsum dolor sit amet.</p>"},{"location":"cards/#bigger","title":"Bigger","text":"<p>Zeus</p> <p>Lorem ipsum dolor sit amet.</p> <p>Athena</p> <p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p> <p>Lorem ipsum dolor sit amet.</p> <p>Artemis</p> <p>Lorem ipsum dolor sit amet.</p> <p>Ares</p> <p>Lorem ipsum dolor sit amet.</p> <p>Nike</p> <p>Lorem ipsum dolor sit amet.</p>"},{"location":"cards/#smaller","title":"Smaller","text":"<p>Zeus</p> <p>Lorem ipsum dolor sit amet.</p> <p>Athena</p> <p>Lorem ipsum dolor sit amet.</p> <p>Poseidon</p> <p>Lorem ipsum dolor sit amet.</p> <p>Artemis</p> <p>Lorem ipsum dolor sit amet.</p> <p>Ares</p> <p>Lorem ipsum dolor sit amet.</p> <p>Nike</p> <p>Lorem ipsum dolor sit amet.</p> <p>Last modified on: 2023-12-23 13:52:36</p>ST"},{"location":"contribs/","title":"Contribs","text":"<p>The contribs extension provides a plugin to display information about contributors and last commit time for each page. It works using the <code>git</code> CLI to obtain information from the same repository where the MkDocs site is built. It doesn't require any communication with third party services, but it requires running in a Git repository.</p> <p>Git support only</p> <p>This plugin works only with Git repositories, and since it obtains information from the git repository that contains the MkDocs site, it is designed for scenarios in which the documentation is built in CI/CD jobs.</p> <p>This plugin doesn't require any markup code: it modifies each page to include contributors' list and last commit time affecting the file, and it doesn't require integration with any external API.</p>"},{"location":"contribs/#how-to-use","title":"How to use","text":"<p>Install using <code>pip install neoteroi-mkdocs</code>. Edit your <code>mkdocs.yml</code> file to include the extra CSS file from Neoteroi mkdocs-plugins and the <code>neoteroi.contribs</code> plugin for MkDocs:</p> <pre><code>extra_css:\n  - css/neoteroi-mkdocs.css\n  ...\n\nplugins:\n  - search\n  - neoteroi.contribs\n</code></pre>"},{"location":"contribs/#information","title":"Information","text":"<p>The plugin displays the last modified time for each file (the last time a file was modified in the Git repository), and the list of contributors, sorted by commits count.</p> <p></p>"},{"location":"contribs/#options","title":"Options","text":"Name Description Type Default <code>contributors_label</code> The label text for contributors list. <code>str</code> \"Contributors\" <code>last_modified_label</code> The label text for last modified time. <code>str</code> \"Last modified on\" <code>last_modified_time</code> Whether to display the last modified time for each page. <code>bool</code> <code>True</code> <code>time_format</code> Format to be used for dates. <code>str</code> \"%Y-%m-%d %H:%M:%S\" <code>contributors</code> Information about contributors, use to configure images for contributors. <code>list</code> of <code>contributor</code> objects <code>[]</code> <p>The plugin by default displays dots with the first two initials of each committer's name, displaying pictures requires explicit configuration, described below.</p>"},{"location":"contribs/#contributor-object","title":"Contributor object","text":"<p>The following table describes the objects that can be used to provide more information about contributors.</p> Property Description Type Default <code>email</code> Email address used to match a contributor. <code>str</code> <code>n/a</code> <code>image</code> URL to be used as image for the contributor. <code>str</code> \"\""},{"location":"contribs/#including-contributors-pictures","title":"Including contributors' pictures","text":"<p>To configure images for contributors, use the <code>contributors</code> option like in the following example:</p> <pre><code>  - neoteroi.contribs:\n      contributors:\n        - email: roberto.prevato@gmail.com\n          image: https://avatars.githubusercontent.com/u/2576032?s=400&amp;u=d8d880e8ed05bb170877dd3d561d8301c4beeeed&amp;v=4\n</code></pre> <p>Contributors are matched by email address, and the image is used if configured.</p>"},{"location":"contribs/#adding-information-with-txt-files","title":"Adding information with txt files","text":"<p>In some cases contributors information cannot be obtained from Git history: for example following a history rewrite, or because contributors for a page are not competent in Git, and contributed in ways that are not visible in the commit history. For these situations, the contribs plugin supports adding more information using <code>*.contribs.txt</code> files, with a structure like the following:</p> <pre><code># Comment\nCharlie Brown &lt;charlie.brown@peanuts.com&gt; (3)\nSally Brown &lt;sally.brown@peanuts.com&gt; (1)\nRoberto Prevato &lt;roberto.prevato@gmail.com&gt; (10)\n</code></pre> <p>The name of the .txt files must match the name of the page:</p> <ul> <li><code>example.md</code></li> <li><code>example.contribs.txt</code></li> </ul>"},{"location":"contribs/#under-the-hood","title":"Under the hood","text":"<p>This plugin works by using the following <code>git</code> commands, to obtain contributors and the last modified time of a file:</p> <pre><code>git shortlog --summary --numbered --email \"README.md\"\n\ngit log -1 --pretty=\"format:%ci\" \"README.md\"\n</code></pre> <p>Last modified on: 2023-12-23 13:52:36</p>"},{"location":"credits/","title":"Credits","text":"<p>The pictures used in the examples are made by by max.icons from www.flaticon.com.</p> <p>Zeus</p> <p>Athena</p> <p>Poseidon</p> <p>Artemis</p> <p>Ares</p> <p>Nike</p> <p>Prometheus</p> <p>Medusa</p> <p>Last modified on: 2022-08-12 07:26:10</p>"},{"location":"gantt/","title":"Gantt","text":"<p>The Gantt extension provides a beautiful implementation of Gantt diagrams for MkDocs. A Gantt diagram is great to provide detailed information of chronological events, like a project roadmap.</p> 2022 Q1 Q2 March 2022 April 2022 May 2022 June 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 <p>Definition Phase</p> Creative Brief Graphic Design Research Brainstorming / Mood Boarding <p>Creation Phase</p> Sketching Design Building Refining <p>Feedback Phase</p> Presenting Revisions <p>Delivery Phase</p> Final delivery"},{"location":"gantt/#how-to-use","title":"How to use","text":"<p>Edit your <code>mkdocs.yml</code> file to include the extra CSS file from Neoteroi mkdocs-plugins and the <code>neoteroi.projects</code> extension:</p> <pre><code>extra_css:\n  - css/neoteroi-mkdocs.css\n  ...\n\nmarkdown_extensions:\n  - neoteroi.projects\n  ...\n</code></pre>"},{"location":"gantt/#input-object","title":"Input object","text":""},{"location":"gantt/#examples","title":"Examples","text":"JSONYAMLFile sourceURL source <pre><code>::gantt::\n[\n    {\n        \"title\": \"Definition Phase\",\n        \"activities\": [\n            {\n                \"title\": \"Creative Brief\",\n                \"start\": \"2022-03-03\",\n                \"lasts\": \"1 day\"\n            },\n            {\n                \"title\": \"Graphic Design Research\",\n                \"start\": \"2022-03-02\",\n                \"lasts\": \"2 weeks\"\n            },\n            {\n                \"title\": \"Brainstorming / Mood Boarding\",\n                \"start\": \"2022-03-11\",\n                \"lasts\": \"2 weeks\"\n            }\n        ]\n    },\n    {\n        \"title\": \"Creation Phase\",\n        \"activities\": [\n            {\n                \"title\": \"Sketching\",\n                \"start\": \"2022-03-21\",\n                \"lasts\": \"2 weeks\"\n            },\n            {\n                \"title\": \"Design Building\",\n                \"start\": \"2022-04-02\",\n                \"lasts\": \"4 weeks\"\n            },\n            {\n                \"title\": \"Refining\",\n                \"start\": \"2022-05-01\",\n                \"lasts\": \"2 weeks\"\n            }\n        ]\n    },\n    {\n        \"title\": \"Feedback Phase\",\n        \"activities\": [\n            {\n                \"title\": \"Presenting\",\n                \"start\": \"2022-05-01\",\n                \"lasts\": \"3 days\"\n            },\n            {\n                \"title\": \"Revisions\",\n                \"start\": \"2022-05-02\",\n                \"end\": \"2022-05-31\"\n            }\n        ]\n    },\n    {\n        \"title\": \"Delivery Phase\",\n        \"activities\": [\n            {\n                \"title\": \"Final delivery\",\n                \"start\": \"2022-06-05\",\n                \"end\": \"2022-06-06\"\n            }\n        ]\n    }\n]\n::/gantt::\n</code></pre> <pre><code>::gantt::\n\n- title: Definition Phase\n  activities:\n  - title: Creative Brief\n    start: 2022-03-03\n    lasts: 1 day\n  - title: Graphic Design Research\n    start: 2022-03-02\n    end: 2022-03-10\n    lasts: 2 weeks\n  - title: Brainstorming / Mood Boarding\n    start: 2022-03-11\n    end: 2022-03-20\n\n- title: Creation Phase\n  activities:\n  - title: Sketching\n    start: 2022-03-21\n    end: 2022-04-01\n  - title: Design Building\n    start: 2022-04-02\n    end: 2022-04-20\n  - title: Refining\n    start: 2022-04-21\n    end: 2022-04-30\n\n- title: Feedback Phase\n  activities:\n  - title: Presenting\n    start: 2022-04-22\n    end: 2022-05-01\n  - title: Revisions\n    start: 2022-05-02\n    end: 2022-05-10\n\n- title: Delivery Phase\n  activities:\n  - title: Final delivery\n    start: 2022-05-11\n    end: 2022-05-12\n\n::/gantt::\n</code></pre> <pre><code>[gantt(./settings.yaml)]\n\n[gantt(./settings.json)]\n</code></pre> <pre><code>[gantt(https://www.neoteroi.dev/examples/gantt.yaml)]\n\n[gantt(https://www.neoteroi.dev/examples/gantt.json)]\n</code></pre>"},{"location":"gantt/#schema","title":"Schema","text":"<p>The input for a Gantt diagram is a list of activities having a shape described by the following scheme:</p> <pre><code>classDiagram\ndirection LR\n\nclass Event {\n    title: str\n    description: str | None = None\n    time: datetime | None = None\n    icon: str | None = None\n}\n\nclass Activity {\n    title: str\n    start: date | None = None\n    end: date | None = None\n    lasts: str | None = None\n    description: str | None = None\n    events: Array of Event | None\n    activities: Array of Activity | None\n}\n\nActivity --&gt; Event\nActivity --&gt; Activity\n</code></pre> <pre><code>@dataclass(frozen=True)\nclass Event:\n    title: str\n    description: str | None = None\n    time: datetime | None = None\n    icon: str | None = None\n\n@dataclass(frozen=True)\nclass Activity:\n    title: str\n    start: date | None = None\n    end: date | None = None\n    lasts: str | None = None\n    description: str | None = None\n    activities: List[\"Activity\"] | None = None\n    events: List[Event] | None = None\n</code></pre>"},{"location":"gantt/#dates-and-times","title":"Dates and times","text":"<p>The duration of activities can be described in two ways:</p> <ol> <li>specifying <code>start</code> and <code>end</code> as dates or datetimes</li> <li>specifying <code>start</code> and <code>lasts</code> properties</li> </ol> <p>When using <code>lasts</code>, it is possible to use the following syntax:</p> Days Example Alternative lasts n days lasts 10 days days | day | d lasts n weeks lasts 2 weeks weeks | week | w lasts n months lasts 3 months months | month | m lasts n years lasts 3 years years | year | y <p>This feature is inspired by gantt diagrams in PlantUML.</p> <p>Currently unsupported</p> <ul> <li>Time information is currently ignored, the extension only handles dates.   Anyway, the input objects can still have detailed date and time information.</li> <li>The extension currently requires dates (year, month, day information): it   cannot handle information having only number of days without month and year   information (unlike PlantUML).</li> </ul>"},{"location":"gantt/#using-events","title":"Using events","text":"<p>It is possible to define events for each activity in the plan. Events require a single date and are represented with circles.</p> 2022 Q1 Q2 March 2022 April 2022 May 2022 June 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 <p>Milestones</p> <p>Definition Phase</p> Graphic Design Research Brainstorming / Mood Boarding <p>Creation Phase</p> Sketching Design Building Refining <p>Feedback Phase</p> Presenting Revisions <p>Examples:</p> JSONYAML <pre><code>::gantt::\n[\n    {\n        \"title\": \"Milestones\",\n        \"events\": [\n            {\n                \"title\": \"Kick-off meeting\",\n                \"time\": \"2022-03-03\",\n                \"icon\": \":octicons-rocket-16:\"\n            },\n            {\n                \"title\": \"Final delivery\",\n                \"time\": \"2022-06-05\",\n                \"icon\": \":octicons-sun-16:\"\n            }\n        ]\n    },\n    {\n        \"title\": \"Definition Phase\",\n        \"activities\": [\n            {\n                \"title\": \"Graphic Design Research\",\n                \"start\": \"2022-03-02\",\n                \"lasts\": \"2 weeks\"\n            },\n            {\n                \"title\": \"Brainstorming / Mood Boarding\",\n                \"start\": \"2022-03-11\",\n                \"lasts\": \"2 weeks\"\n            }\n        ]\n    },\n    {\n        \"title\": \"Creation Phase\",\n        \"activities\": [\n            {\n                \"title\": \"Sketching\",\n                \"start\": \"2022-03-21\",\n                \"lasts\": \"2 weeks\"\n            },\n            {\n                \"title\": \"Design Building\",\n                \"start\": \"2022-04-02\",\n                \"lasts\": \"4 weeks\"\n            },\n            {\n                \"title\": \"Refining\",\n                \"start\": \"2022-05-01\",\n                \"lasts\": \"2 weeks\"\n            }\n        ]\n    },\n    {\n        \"title\": \"Feedback Phase\",\n        \"activities\": [\n            {\n                \"title\": \"Presenting\",\n                \"start\": \"2022-05-01\",\n                \"lasts\": \"3 days\"\n            },\n            {\n                \"title\": \"Revisions\",\n                \"start\": \"2022-05-02\",\n                \"end\": \"2022-05-31\"\n            }\n        ]\n    }\n]\n::/gantt::\n</code></pre> <pre><code>::gantt::\n\n- title: Milestones\n    events:\n    - title: Kick-off meeting\n        time: 2022-03-03\n        icon: \":octicons-rocket-16:\"\n    - title: Final delivery\n        time: 2022-06-05\n        icon: \":octicons-sun-16:\"\n\n- title: Definition Phase\n    activities:\n    - title: Graphic Design Research\n        start: 2022-03-02\n        lasts: 2 weeks\n    - title: Brainstorming / Mood Boarding\n        start: 2022-03-11\n        lasts: 2 weeks\n\n- title: Creation Phase\n    activities:\n    - title: Sketching\n        start: 2022-03-21\n        lasts: 2 weeks\n    - title: Design Building\n        start: 2022-04-02\n        lasts: 4 weeks\n    - title: Refining\n        start: 2022-05-01\n        lasts: 2 weeks\n\n- title: Feedback Phase\n    activities:\n    - title: Presenting\n        start: 2022-05-01\n        lasts: 3 days\n    - title: Revisions\n        start: 2022-05-02\n        end: 2022-05-31\n\n::/gantt::\n</code></pre> <p>Any activity can have events</p> <p>The examples here show events in a single activity, but they can be added to any activity of a plan.</p>"},{"location":"gantt/#subactivities","title":"Subactivities","text":"<p>It is possible to define more than one item per row, using subactivities. Subactivities are always displayed inside the row of their root activity.</p> <p>When defining activities, it is also possible to define the start date for the first item in a tree of activities, and only specify how long following activities last. To add breaks, add items having a <code>skip</code> property with a value describing a duration.</p> <p>The following examples illustrate both features:</p> 2022 Q1 Q2 March 2022 April 2022 May 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22 <p>Developer</p> Custom sign-up Custom password reset <p>Tester</p> Tests custom sign-up Tests custom password reset <p>Technical writer</p> Documents custom sign-up Documents custom password reset JSONYAML <pre><code>::gantt::\n{\n    \"start\": \"2022-03-01\",\n    \"activities\": [\n        {\n            \"title\": \"Developer\",\n            \"activities\": [\n                {\n                    \"activities\": [\n                        {\n                            \"title\": \"Custom sign-up\",\n                            \"lasts\": \"2 weeks\"\n                        },\n                        {\n                            \"skip\": \"1 week\"\n                        },\n                        {\n                            \"title\": \"Custom password reset\",\n                            \"lasts\": \"2 weeks\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"title\": \"Tester\",\n            \"activities\": [\n                {\n                    \"activities\": [\n                        {\n                            \"skip\": \"5 days\"\n                        },\n                        {\n                            \"title\": \"Tests custom sign-up\",\n                            \"lasts\": \"2 weeks\"\n                        },\n                        {\n                            \"skip\": \"1 week\"\n                        },\n                        {\n                            \"title\": \"Tests custom password reset\",\n                            \"lasts\": \"2 weeks\"\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"title\": \"Technical writer\",\n            \"activities\": [\n                {\n                    \"activities\": [\n                        {\n                            \"skip\": \"4 weeks\"\n                        },\n                        {\n                            \"title\": \"Documents custom sign-up\",\n                            \"lasts\": \"2 weeks\"\n                        },\n                        {\n                            \"title\": \"Documents custom password reset\",\n                            \"lasts\": \"2 weeks\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n::/gantt::\n</code></pre> <pre><code>::gantt::\nstart: 2022-03-01\nactivities:\n  - title: Developer\n    activities:\n      - activities:\n          - title: Custom sign-up\n            lasts: 2 weeks\n          - skip: 1 week\n          - title: Custom password reset\n            lasts: 2 weeks\n\n  - title: Tester\n    activities:\n      - activities:\n          - skip: 5 days\n          - title: Tests custom sign-up\n            lasts: 2 weeks\n          - skip: 1 week\n          - title: Tests custom password reset\n            lasts: 2 weeks\n\n  - title: Technical writer\n    activities:\n      - activities:\n          - skip: 4 weeks\n          - title: Documents custom sign-up\n            lasts: 2 weeks\n          - title: Documents custom password reset\n            lasts: 2 weeks\n::/gantt::\n</code></pre> 2022 Q1 Q2 January 2022 February 2022 March 2022 April 2022 May 2022 June 2022 W52W1W2W3W4W5W6W7W8W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 <p>Example</p> Feature 1 Activity 1.1 Activity 1.12 Activity 2 Activity 3 Activity 2 Activity 2 JSONYAML <pre><code>::gantt::\n[\n    {\n        \"title\": \"Example\",\n        \"start\": \"2022-01-01\",\n        \"activities\": [\n            {\n                \"title\": \"Feature 1\",\n                \"lasts\": \"10 day\",\n                \"activities\": [\n                    {\n                        \"skip\": \"10 days\"\n                    },\n                    {\n                        \"title\": \"Activity 1.1\",\n                        \"lasts\": \"30 days\",\n                        \"activities\": [\n                            {\n                                \"skip\": \"5 days\"\n                            },\n                            {\n                                \"title\": \"Activity 1.12\",\n                                \"lasts\": \"30 days\"\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                \"title\": \"Activity 2\",\n                \"lasts\": \"10 days\"\n            },\n            {\n                \"title\": \"Activity 3\",\n                \"lasts\": \"20 days\"\n            },\n            {\n                \"title\": \"Activity 2\",\n                \"lasts\": \"10 weeks\"\n            },\n            {\n                \"title\": \"Activity 2\",\n                \"lasts\": \"10 weeks\"\n            }\n        ]\n    }\n]\n::/gantt::\n</code></pre> <pre><code>::gantt::\n\n- title: Beginning\n  start: 2022-01-01\n  activities:\n    - title: Feature 1\n      lasts: 10 day\n      activities:\n        - skip: 10 days\n        - title: Activity 1.1\n          lasts: 30 days\n          activities:\n            - skip: 5 days\n            - title: Activity 1.12\n              lasts: 30 days\n    - title: Activity 2\n      lasts: 10 week\n    - title: Activity 3\n      lasts: 20 days\n    - title: Activity 2\n      lasts: 10 week\n    - title: Activity 2\n      lasts: 10 week\n\n- title: Beginning\n  start: 2022-01-01\n  activities:\n    - title: Activity 1\n      lasts: 10 day\n      activities:\n        - title: Activity 1.1\n          lasts: 30 days\n    - title: Activity 2\n      lasts: 40 week\n    - title: Activity 3\n      lasts: 20 days\n\n::/gantt::\n</code></pre>"},{"location":"gantt/#options","title":"Options","text":"Name Description Default id Configures an <code>id</code> property on the root HTML element \"\" month-width Controls the size of the scale - represents the pixels width of a month with 30 days 150 month-format Controls date formatting for months \"%B %Y\" no-groups Disables groups (flag) False no-years Disables years (flag) False no-weeks Disables weeks (flag) False no-quarters Disables quarters (flag) False no-days Disables days (flag) False whole-years Displays whole years from January to December (flag) False pastello Applies a CSS class to use a color palette with milder saturation False vlines-pace Controls how separator vertical lines are generated (each week or each month) \"monthly\" or \"weekly\""},{"location":"gantt/#controlling-the-scale-size","title":"Controlling the scale size","text":"<p>This extension produces diagrams displaying years, quarters, months, weeks, and days in scale. To control the size of the scale, use the <code>month-width</code> option, which affects the size of months having 30 days.</p> <pre><code>[gantt month-width=800(./docs/gantt/gantt-1.yaml)]\n</code></pre> 2022 Q1 Q2 March 2022 April 2022 May 2022 June 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 1234567891011121314151617181920212223242526272829303112345678910111213141516171819202122232425262728293012345678910111213141516171819202122232425262728293031123456789101112131415161718192021222324252627282930 <p>Definition Phase</p> Creative Brief Graphic Design Research Brainstorming / Mood Boarding <p>Creation Phase</p> Sketching Design Building Refining <p>Feedback Phase</p> Presenting Revisions <p>Delivery Phase</p> Final delivery <p>Displaying days</p> <p>Days are not displayed when the default month size is used. When <code>month-width</code> is sufficiently big, days are displayed automatically.</p>"},{"location":"gantt/#gentler-colors","title":"Gentler colors","text":"<p>It's possible to use a a different color palette with less saturated colors, using the <code>pastello</code> flag.</p> <pre><code>[gantt pastello(./docs/gantt/gantt-1.yaml)]\n</code></pre> 2022 Q1 Q2 March 2022 April 2022 May 2022 June 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 <p>Definition Phase</p> Creative Brief Graphic Design Research Brainstorming / Mood Boarding <p>Creation Phase</p> Sketching Design Building Refining <p>Feedback Phase</p> Presenting Revisions <p>Delivery Phase</p> Final delivery"},{"location":"gantt/#disabling-groups","title":"Disabling groups","text":"<p>To disable groups on the left side, use the <code>no-groups</code> flag.</p> <pre><code>[gantt no-groups(./docs/gantt/gantt-1.yaml)]\n</code></pre> 2022 Q1 Q2 March 2022 April 2022 May 2022 June 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 <p>Definition Phase</p> Creative Brief Graphic Design Research Brainstorming / Mood Boarding <p>Creation Phase</p> Sketching Design Building Refining <p>Feedback Phase</p> Presenting Revisions <p>Delivery Phase</p> Final delivery"},{"location":"gantt/#disabling-parts-of-the-periods","title":"Disabling parts of the periods","text":"<p>Use the <code>no-years</code>, <code>no-weeks</code>, <code>no-quarters</code>, or <code>no-days</code> to disable certain periods displayed on the top. For example, to disable years and quarters:</p> <pre><code>[gantt no-years no-quarters(./docs/gantt/gantt-2.yaml)]\n</code></pre> March 2022 April 2022 May 2022 June 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 <p>Milestones</p> <p>Definition Phase</p> Graphic Design Research Brainstorming / Mood Boarding <p>Creation Phase</p> Sketching Design Building Refining <p>Feedback Phase</p> Presenting Revisions <p>Days default</p> <p>Days are displayed by default, but only if their elements width would be at least of 20px.</p>"},{"location":"gantt/#displaying-full-years","title":"Displaying full years","text":"<p>Gantt diagrams display by default the months between the smallest date and the biggest date in the input data, from the beginning of the earliest month to the end of the latest month. To display full years, from January to December, use the <code>whole-years</code> option.</p> <pre><code>[gantt whole-years(./docs/gantt/gantt-1.yaml)]\n</code></pre> 2022 Q1 Q2 Q3 Q4 January 2022 February 2022 March 2022 April 2022 May 2022 June 2022 July 2022 August 2022 September 2022 October 2022 November 2022 December 2022 W52W1W2W3W4W5W6W7W8W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26W27W28W29W30W31W32W33W34W35W36W37W38W39W40W41W42W43W44W45W46W47W48W49W50W51W52 <p>Definition Phase</p> Creative Brief Graphic Design Research Brainstorming / Mood Boarding <p>Creation Phase</p> Sketching Design Building Refining <p>Feedback Phase</p> Presenting Revisions <p>Delivery Phase</p> Final delivery"},{"location":"gantt/#icons-support","title":"Icons support","text":"<p>The gantt extension integrates with Material for MkDocs icons, like shown in the examples above. The extension also supports links to images, like in the following example:</p> March 2022 April 2022 May 2022 June 2022 W9W10W11W12W13W14W15W16W17W18W19W20W21W22W23W24W25W26 <p>Parties</p> <p>Last modified on: 2024-02-09 22:15:51</p>RSST"},{"location":"intro/","title":"Introduction","text":"<p>These plugins are designed to be used with MkDocs and are tested for Material for MkDocs. They should work also without Material for MkDocs, but they aren't tested for different kinds of themes.</p>"},{"location":"intro/#how-to-obtain-css-files","title":"How to obtain CSS files","text":"<p>The plugins in this library use specific CSS rules to work. The source code is written in SASS, CSS files are built during the CI build of the project.</p> <p>The recommended way to obtain the CSS files is to download a copy from one of these sources:</p> <ul> <li>the <code>dist-package-css</code> artifact generated by a build (example)</li> <li>downloads or assets of the latest successful release (example)</li> </ul> <p>Last modified on: 2022-08-12 07:26:10</p>"},{"location":"spantable/","title":"Spantable","text":"<p>Extension to support tables with <code>colspan</code> and <code>rowspan</code>, including automatic handling of span value, support for captions, and table classes.</p>"},{"location":"spantable/#how-to-use","title":"How to use","text":"<p>Edit your <code>mkdocs.yml</code> file to include the extra CSS file from Neoteroi mkdocs-plugins and the <code>neoteroi.spantable</code> extension:</p> <pre><code>extra_css:\n  - css/neoteroi-mkdocs.css\n  ...\n\nmarkdown_extensions:\n  - neoteroi.spantable\n  ...\n</code></pre> <p>Write a Markdown table like in the following example, use <code>@span</code> placeholders for automatic handling of colspan and rowspan depending on adjacent empty cells (separator lines are ignored):</p> <pre><code>::spantable::\n\n| Country      | Address                                                  |\n| ------------ | -------------------------------------------------------- |\n| France @span | 8 Rue St Ferr\u00e9ol - 92190 City: Meudon (\u00cele-de-France)    |\n|              | 50 boulevard Amiral Courbet - 94310 Orly (\u00cele-de-France) |\n|              | ...                                                      |\n|              | ...                                                      |\n| Italy @span  | Str. S. Maurizio, 12, 10072 Caselle torinese TO          |\n|              | S.S. Torino-Asti - 10026 Santena (TO)                    |\n|              | ...                                                      |\n| Poland @span | al. Jana Paw\u0142a II 22, 00-133 Warszawa                    |\n|              | plac Trzech Krzy\u017cy 4/6, 00-535 Warszawa                  |\n|              | ...                                                      |\n|              | ...                                                      |\n\n::end-spantable::\n</code></pre> <p>Produces an output like the following:</p> Country Address France 8 Rue St Ferr\u00e9ol - 92190 City: Meudon (\u00cele-de-France) 50 boulevard Amiral Courbet - 94310 Orly (\u00cele-de-France) ... ... Italy Str. S. Maurizio, 12, 10072 Caselle torinese TO S.S. Torino-Asti - 10026 Santena (TO) ... Poland al. Jana Paw\u0142a II 22, 00-133 Warszawa plac Trzech Krzy\u017cy 4/6, 00-535 Warszawa ... ..."},{"location":"spantable/#options","title":"Options","text":"Option Description @span Applies colspan and rowspan automatically to expand the cell to all adjacent cells (colspan has precedence over rowspan). @span=x colspan=x @span=x:y colspan=x; rowspan=y; @class=\"value\" Adds an HTML class to any cell, to simplify styling (optional). caption=\"value\" Adds a caption element with the given value to the table (optional). class=\"value\" Adds a class to the table element with the given value (optional). <p>In the following example, the cells with <code>Italy</code> and <code>France</code> both get <code>colspan=\"2\" rowspan=\"3\"</code> because they have empty adjacent cells growing one column and two rows:</p> <pre><code>::spantable:: caption=\"Life Expectancy By Current Age\" class=\"foo\"\n\n| Italy @span   |       | 40 @span      |       | 20 @span      |       |\n| ------------- | ----- | ------------- | ----- | ------------- | ----- |\n|               |       | Men           | Women | Men           | Women |\n|               |       | 78            | 82    | 77            | 81    |\n| Poland @span  |       | 40 @span      |       | 20 @span      |       |\n| ------------- | ----- | ------------- | ----- | ------------- | ----- |\n|               |       | Men           | Women | Men           | Women |\n|               |       | 78            | 82    | 77            | 81    |\n\n::end-spantable::\n</code></pre> Life Expectancy By Current Age Italy 40 20 Men Women Men Women 78 82 77 81 Poland 40 20 Men Women Men Women 78 82 77 81 <p>Last modified on: 2022-08-12 07:26:10</p>"},{"location":"timeline/","title":"Timeline","text":"<p>The timeline extension provides a way to display chronological events with style. A timeline is great to present a high level overview of information happening at different stages or times.</p> <p>Launch</p> 2022-Q1<p>First implementation.</p> <p>New features</p> 2022-Q2<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p>More features!</p> 2022-Q3<p>Lorem ipsum dolor sit amet.</p> <p>Bugs!</p> 2022-Q4<p>Lorem ipsum dolor sit amet.</p>"},{"location":"timeline/#how-to-use","title":"How to use","text":"<p>Edit your <code>mkdocs.yml</code> file to include the extra CSS file from Neoteroi mkdocs-plugins and the <code>neoteroi.timeline</code> extension:</p> <pre><code>extra_css:\n  - css/neoteroi-mkdocs.css\n  ...\n\nmarkdown_extensions:\n  - neoteroi.timeline\n  ...\n</code></pre>"},{"location":"timeline/#input-object","title":"Input object","text":""},{"location":"timeline/#examples","title":"Examples","text":"JSONYAMLFile sourceURL source <pre><code>::timeline::\n\n[\n    {\n        \"title\": \"Launch\",\n        \"content\": \"First implementation.\",\n        \"icon\": \":fontawesome-rocket:\",\n        \"sub_title\": \"2022-Q1\"\n    },\n    {\n        \"title\": \"One\",\n        \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n        \"icon\": \":octicons-sun-16:\",\n        \"key\": \"cyan\",\n        \"sub_title\": \"2022-Q2\"\n    },\n    {\n        \"title\": \"Two\",\n        \"content\": \"Lorem ipsum dolor sit amet.\",\n        \"icon\": \":material-github:\",\n        \"sub_title\": \"2022-Q3\"\n    },\n    {\n        \"title\": \"Three\",\n        \"content\": \"Lorem ipsum dolor sit amet.\",\n        \"key\": \"pink\",\n        \"sub_title\": \"2022-Q4\"\n    }\n]\n\n::/timeline::\n</code></pre> <pre><code>::timeline::\n\n- content: First implementation.\n  icon: ':material-rocket-launch-outline:'\n  sub_title: 2022-Q1\n  title: Launch\n- content: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n  icon: ':fontawesome-solid-gem:'\n  sub_title: 2022-Q2\n  title: New features\n- content: Lorem ipsum dolor sit amet.\n  icon: ':material-gauge-empty:'\n  sub_title: 2022-Q3\n  title: More features!\n- content: Lorem ipsum dolor sit amet.\n  icon: ':material-bug:'\n  sub_title: 2022-Q4\n  title: Bugs!\n\n::/timeline::\n</code></pre> <pre><code>[timeline(./settings.yaml)]\n\n[timeline(./settings.json)]\n</code></pre> <pre><code>[timeline(https://www.neoteroi.dev/examples/timeline.yaml)]\n\n[timeline(https://www.neoteroi.dev/examples/timeline.json)]\n</code></pre>"},{"location":"timeline/#schema","title":"Schema","text":"<pre><code>classDiagram\ndirection LR\n\nclass TimelineItem {\n    title: str\n    content: str | null = null\n    sub_title: str | null = null\n    icon: str | null = null\n    key: str | null = null\n}\n\nclass Timeline {\n    items: Array of TimelineItem\n}\n\nTimeline --&gt; TimelineItem\n</code></pre> <pre><code>@dataclass\nclass TimelineItem:\n    title: str\n    content: str | None = None\n    sub_title: str | None = None\n    icon: str | None = None\n    key: str | None = None\n\n\n@dataclass\nclass Timeline:\n    items: List[TimelineItem]\n</code></pre>"},{"location":"timeline/#options","title":"Options","text":"<p>The line of a timeline can be aligned on the left, center, or right. The default alignment for timelines is <code>left</code>.</p>"},{"location":"timeline/#center-alignment","title":"Center alignment","text":"<p>To have the line of the timeline on the center, add the <code>center</code> option:</p> <pre><code>[timeline center(./docs/timeline/timeline-1.json)]\n</code></pre> <p>Launch</p> 2022-Q1<p>First implementation.</p> <p>New features</p> 2022-Q2<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p>More features!</p> 2022-Q3<p>Lorem ipsum dolor sit amet.</p> <p>Bugs!</p> 2022-Q4<p>Lorem ipsum dolor sit amet.</p>"},{"location":"timeline/#center-alternate","title":"Center alternate","text":"<p>When using <code>center</code> alignment, it is also possible to alternate the position of items, using the <code>alternate</code> option.</p> <pre><code>[timeline center alternate(./docs/timeline/timeline-1.json)]\n</code></pre> <p>Launch</p> 2022-Q1<p>First implementation.</p> <p>New features</p> 2022-Q2<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p>More features!</p> 2022-Q3<p>Lorem ipsum dolor sit amet.</p> <p>Bugs!</p> 2022-Q4<p>Lorem ipsum dolor sit amet.</p>"},{"location":"timeline/#right-alignment","title":"Right alignment","text":"<p>To have the line of the timeline on the right, add the <code>right</code> option:</p> <pre><code>[timeline right(./docs/timeline/timeline-1.json)]\n</code></pre> <p>Launch</p> 2022-Q1<p>First implementation.</p> <p>New features</p> 2022-Q2<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> <p>More features!</p> 2022-Q3<p>Lorem ipsum dolor sit amet.</p> <p>Bugs!</p> 2022-Q4<p>Lorem ipsum dolor sit amet.</p>"},{"location":"timeline/#rendering-headings","title":"Rendering headings","text":"<p>To render headings (<code>h3</code> elements), resulting in links for the table of contents, use the <code>headings</code> option.</p> <pre><code>[timeline center headings(./docs/timeline/timeline-1.json)]\n</code></pre>"},{"location":"timeline/#icons-support","title":"Icons support","text":"<p>The timeline extension integrates with Material for MkDocs icons, like shown in the examples above. However, the extension also supports links to images, like in the following example:</p> <pre><code>::timeline:: class=\"epic-timeline\"\n- title: Zeus does something\n  content: ...\n  icon: ./img/icons/001-zeus.png\n  sub_title: Turn 1\n- title: Athena does something\n  content: ...\n  icon: ./img/icons/003-athena.png\n  sub_title: Turn 2\n- title: Poseidon does something\n  content: ...\n  icon: ./img/icons/007-poseidon.png\n  sub_title: Turn 3\n::/timeline::\n</code></pre> <p>Zeus does something</p> Turn 1<p>...</p> <p>Athena does something</p> Turn 2<p>...</p> <p>Poseidon does something</p> Turn 3<p>...</p>"},{"location":"timeline/#styling","title":"Styling","text":"<p>To apply custom styles to a timeline, assign a custom <code>id</code> or <code>class</code> to it, and apply custom CSS rules to the mkdocs configuration:</p> <pre><code>::timeline:: class=\"epic-timeline\"\n\n...\n\n::timeline:: id=\"epic-timeline\"\n</code></pre> <p>mkdocs.yml</p> <pre><code>extra_css:\n  - css/example.css\n</code></pre> <p>css/example.css</p> <pre><code>.epic-timeline .nt-timeline-dot .icon {\n    color: white;\n    background: white;\n    border-radius: 50%;\n}\n</code></pre> <p>To apply a class to a particular item of the timeline, assign a <code>key</code> property to it.</p> <pre><code>::timeline:: class=\"epic-timeline\"\n- title: Zeus does something\n  key: zeus\n  content: ...\n  icon: ./img/icons/001-zeus.png\n  sub_title: Turn 1\n- title: Athena does something\n  key: athena\n  content: ...\n  icon: ./img/icons/003-athena.png\n  sub_title: Turn 2\n- title: Poseidon does something\n  key: poseidon\n  content: ...\n  icon: ./img/icons/007-poseidon.png\n  sub_title: Turn 3\n::/timeline::\n</code></pre> <p>Last modified on: 2023-12-23 11:06:37</p>ST"},{"location":"web/oad/","title":"OpenAPI Docs","text":"<p>Plugin for MkDocs to generate human readable documentation from OpenAPI Documentation Version 3 (also known as Swagger documentation).</p>"},{"location":"web/oad/#how-to-use","title":"How to use","text":"<p>Install using <code>pip install neoteroi-mkdocs</code>. Configure this plugin in the MkDocs configuration file:</p> <pre><code>plugins:\n  - search\n  - neoteroi.mkdocsoad\n</code></pre> <p>Configure a source in your Markdown file, for example having a <code>swagger.json</code> file in your <code>docs</code> folder:</p> <pre><code>[OAD(./docs/swagger.json)]\n</code></pre> <p>The plugin fetches the contents from the OpenAPI Specification source, generates Markdown using essentials-openapi, then writes them in the markdown file.</p> <p>This configuration is sufficient to generate HTML documentation from OpenAPI specification files. To have a better looking result, it is recommended to apply the extra configuration steps described in the next paragraph.</p>"},{"location":"web/oad/#recommended-enable-pymdown-and-extra-css","title":"Recommended: enable PyMDown and extra CSS","text":"<p>This plugin was designed to generate Markdown for sites that use Material for MkDocs and three extensions from PyMdown extensions. To achieve the best results, it is recommended to enable PyMdown extensions.</p> <ul> <li>Install PyMdown extensions   using <code>pip install pymdown-extensions</code></li> <li>Configure the following PyMdown markdown extensions in the MkDocs   configuration file:</li> </ul> <pre><code>markdown_extensions:\n  - pymdownx.details\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n</code></pre> <ul> <li>Enable PyMdown integration this way:</li> </ul> <pre><code>plugins:\n  - search\n  - neoteroi.mkdocsoad:\n      use_pymdownx: true\n</code></pre> <ul> <li>Download a copy of <code>neoteroi.mkdocsoad.css</code> file and   configure it as extra file in your MkDocs configuration:</li> </ul> <pre><code>extra_css:\n  - css/mkdocsoad.css\n</code></pre> <p>Example result:</p> <p></p> <p>Soon changing...</p> <p>This feature is currently shipped as plugin for MkDocs, it will be modified to be an extension for Python Markdown.</p>"},{"location":"web/oad/#supported-sources-for-openapi-documentation","title":"Supported sources for OpenAPI Documentation","text":"Source Example YAML file <code>[OAD(./docs/swagger.yaml)]</code> JSON file <code>[OAD(./docs/swagger.json)]</code> URL returning YAML on HTTP GET <code>[OAD(https://example-domain.net/swagger/v1/swagger.yaml)]</code> URL returning JSON on HTTP GET <code>[OAD(https://example-domain.net/swagger/v1/swagger.json)]</code> <p>Last modified on: 2022-08-12 07:26:10</p>"}]}